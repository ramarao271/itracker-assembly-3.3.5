<?xml version="1.0" encoding="UTF-8"?>

<!--
    ITracker persistence layer context. 
    
    DBCP pooling DataSource with a Hibernate local session factory. 
    
    All DAOs are wrapped with a HibernateInterceptor, which automatically 
    opens and closes the Hibernate Session if none is bound to the current 
    thread. It is only meant to be useful in case DAO methods are called 
    outside the scope of a Hibernate transaction, which is otherwise 
    responsible for managing the session. 
    
    NB: To prevent calling DAOs outside a transaction context, 
    use the getSession(allowCreate=false). 
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bean="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="classpath:datasource.xml"/>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="entityInterceptor" ref="timestampEntityInterceptor"/>
        <property name="hibernateProperties">
            <ref local="hibernateProperties"/>
        </property>
    </bean>
    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="localOverride" value="true" />
        <property name="location" value="classpath:hibernate.properties" />
        <property name="properties" >
            <props>
                <prop key="hibernate.dialect">#{db_dialect}</prop>
            </props>
        </property>
    </bean>

    <bean id="timestampEntityInterceptor"
          class="org.itracker.persistence.dao.TimestampInterceptor"/>

    <!-- Hibernate interceptor to manage the session outside any transaction scope. -->
    <bean id="hibernateInterceptor"
          class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The configuration DAO -->
    <bean id="configurationDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="configurationDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.ConfigurationDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="configurationDAOTarget"
          class="org.itracker.persistence.dao.ConfigurationDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The scheduled task DAO -->
    <!-- bean id="scheduledTaskDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="scheduledTaskDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ScheduledTaskDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean -->

    <!-- bean id="scheduledTaskDAOTarget"
       class="org.itracker.persistence.dao.ScheduledTaskDAOImpl">
       <property name="sessionFactory">
           <ref bean="sessionFactory" />
       </property>
   </bean -->

    <!-- The language factory -->
    <bean id="languageDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="languageDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.LanguageDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="languageDAOTarget"
          class="org.itracker.persistence.dao.LanguageDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The custom field DAO -->
    <bean id="customFieldDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customFieldDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.CustomFieldDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="customFieldDAOTarget"
          class="org.itracker.persistence.dao.CustomFieldDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The custom field value DAO -->
    <bean id="customFieldValueDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customFieldValueDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.CustomFieldValueDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="customFieldValueDAOTarget"
          class="org.itracker.persistence.dao.CustomFieldValueDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The user DAO -->
    <bean id="userDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.UserDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userDAOTarget"
          class="org.itracker.persistence.dao.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The report factory -->
    <bean id="reportDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="reportDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.ReportDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="reportDAOTarget"
          class="org.itracker.persistence.dao.ReportDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The project DAO -->
    <bean id="projectDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="projectDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.ProjectDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="projectDAOTarget"
          class="org.itracker.persistence.dao.ProjectDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The component DAO -->
    <bean id="componentDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="componentDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.ComponentDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="componentDAOTarget"
          class="org.itracker.persistence.dao.ComponentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The version DAO -->
    <bean id="versionDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="versionDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.VersionDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="versionDAOTarget"
          class="org.itracker.persistence.dao.VersionDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The userpreferences factory -->
    <bean id="userPreferencesDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userPreferencesDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.UserPreferencesDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userPreferencesDAOTarget"
          class="org.itracker.persistence.dao.UserPreferencesDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <!-- The permission DAO -->
    <bean id="permissionDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="permissionDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.PermissionDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="permissionDAOTarget"
          class="org.itracker.persistence.dao.PermissionDAOImpl"
            >
        <property name="sessionFactory" ref="sessionFactory"/>

    </bean>

    <!-- The issue DAO -->
    <bean id="issueDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.IssueDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueDAOTarget"
          class="org.itracker.persistence.dao.IssueDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="projectDAO" ref="projectDAO"/>
    </bean>

    <!-- The issue history DAO -->
    <bean id="issueHistoryDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueHistoryDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.IssueHistoryDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueHistoryDAOTarget"
          class="org.itracker.persistence.dao.IssueHistoryDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The notification DAO -->
    <bean id="notificationDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="notificationDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.NotificationDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="notificationDAOTarget"
          class="org.itracker.persistence.dao.NotificationDAOImpl"
            >
        <property name="sessionFactory" ref="sessionFactory"/>

    </bean>

    <!-- The issue relation DAO -->
    <bean id="issueRelationDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueRelationDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.IssueRelationDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueRelationDAOTarget"
          class="org.itracker.persistence.dao.IssueRelationDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The issue attachment DAO -->
    <bean id="issueAttachmentDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueAttachmentDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.IssueAttachmentDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueAttachmentDAOTarget"
          class="org.itracker.persistence.dao.IssueAttachmentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The issue activity DAO -->
    <bean id="issueActivityDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueActivityDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.IssueActivityDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueActivityDAOTarget"
          class="org.itracker.persistence.dao.IssueActivityDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The project script DAO -->
    <bean id="projectScriptDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="projectScriptDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.ProjectScriptDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="projectScriptDAOTarget"
          class="org.itracker.persistence.dao.ProjectScriptDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- The workflow script DAO -->
    <bean id="workflowScriptDAO"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="workflowScriptDAOTarget"/>
        <property name="proxyInterfaces" value="org.itracker.persistence.dao.WorkflowScriptDAO"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="workflowScriptDAOTarget"
          class="org.itracker.persistence.dao.WorkflowScriptDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>
